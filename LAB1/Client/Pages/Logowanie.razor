@page "/login"
@inject InterfejsSerwisuUzytkownika Serwis
@inject NavigationManager NavigationManager

<PageTitle>LOGOWANIE</PageTitle>
<MudText Typo="Typo.h6" Class="px-4 mb-6">Użytkownik: @tekstNaglowka</MudText>

<EditForm Model="uzytkownik">
    <DataAnnotationsValidator />
    <MudCard>
        <MudCardContent>
            <MudTextField Label="Login" Clearable="true" @bind-Value="uzytkownik.Login" For="@(() => uzytkownik.Login)"></MudTextField>
            <MudTextField Label="Hasło" Clearable="true" @bind-Value="uzytkownik.Haslo" For="@(() => uzytkownik.Haslo)" InputType="@typTekstuHasla" Adornment="Adornment.End" AdornmentIcon="@ikonaHasla" OnAdornmentClick="UkrywanieHasla"></MudTextField>
        </MudCardContent>
    </MudCard>
    <MudButton @onclick="Zaloguj" Class="mr-6 mt-6 mb-6">ZALOGUJ</MudButton>
    @if (tekstBledu != "")
    {
        <MudAlert Severity="Severity.Error">@tekstBledu</MudAlert>
    }
</EditForm>

@code {
    string tekstNaglowka = "NIE ZALOGOWANO";
    string tekstBledu = "";

    UzytkownikWprowadzony uzytkownik = new UzytkownikWprowadzony { };

    protected override void OnParametersSet()
    {
        Serwis.PobierzLogin();
        if (Token.Login == "") tekstNaglowka = "NIE ZALOGOWANO SIĘ";
        else tekstNaglowka = Token.Login;

    }

    async Task Zaloguj()
    {
        uzytkownik.Login = uzytkownik.Login.ToString();
        uzytkownik.Haslo = uzytkownik.Haslo.ToString();
        await Serwis.Login(uzytkownik);

        if (
            Token.JWT == "NIE MA TAKIEGO UŻYTKOWNIKA" ||
            Token.JWT == "NIEPRAWIDŁOWE HASŁO" ||
            Token.JWT == "BŁĄD DOSTĘPU - UŻYTKOWNIK NIE MA PRZYPISANEJ ROLI"
           ) tekstBledu = Token.JWT;
        else NavigationManager.NavigateTo("/");
    }

    bool hasloWidoczne;
    string ikonaHasla = Icons.Material.Filled.VisibilityOff;
    InputType typTekstuHasla = InputType.Password;

    void UkrywanieHasla()
    {
        @if (hasloWidoczne == true)
        {
            hasloWidoczne = false;
            ikonaHasla = Icons.Material.Filled.VisibilityOff;
            typTekstuHasla = InputType.Password;
        }
        else
        {
            hasloWidoczne = true;
            ikonaHasla = Icons.Material.Filled.Visibility;
            typTekstuHasla = InputType.Text;
        }
    }
}